<?xml version="1.0"?>

<launch>
  <param name="pub_map_odom_transform" value="true"/> 
  <param name="map_frame" value="map"/> 
  <param name="base_frame" value="base_frame"/>
  
  <!-- Modified by Durant35, follow: http://wiki.ros.org/hector_slam/Tutorials/SettingUpForYourRobot
  	If you do not require the use of a odom frame 
  	(for example because your platform does not provide any usable odometry) 
  	you can directly publish a transformation from map to base_link
  	
  <param name="odom_frame" value="odom"/>
  --> 
  <param name="odom_frame" value="base_frame"/>
  
  
  <arg name="geotiff_map_file_path" default="$(find hector_geotiff)/maps"/>
  
  <!-- Modified by Durant35, use another driver urg_node instead of hokuyo_node 
  <node pkg="hokuyo_node" type="hokuyo_node" name="hokuyo_node"/>-->
  
  <include file="$(find urg_node)/launch/urg_node.launch" />
  
  
  <!-- move to rasapberry pi due to time problem -->
  <!-- static tf from /map to /odom -->
  <node pkg="tf" type="static_transform_publisher" name="map_2_odom" args="0 0 0 0 0 0 /map /odom 100"/>
  
  <!-- static tf from /odom to /base_frame -->
  <node pkg="tf" type="static_transform_publisher" name="odom_2_base_footprint" args="0 0 0 0 0 0 /odom /base_footprint 100"/>
  <node pkg="tf" type="static_transform_publisher" name="base_footprint_2_base_link" args="0 0 0 0 0 0 /base_footprint /base_link 100"/> 
  <node pkg="tf" type="static_transform_publisher" name="base_link_2_base_stabilized_link" args="0 0 0 0 0 0 /base_link /base_stabilized 100"/> 
  <node pkg="tf" type="static_transform_publisher" name="base_stablized_2_base_frame" args="0 0 0 0 0 0 /base_stabilized /base_frame 100"/> 
  
  <!-- static tf from /base_frame to /laser -->
  <node pkg="tf" type="static_transform_publisher" name="base_frame_2_laser_link" args="0 0 0 0 0 0 /base_frame /laser 100"/>
  
  <!-- It seems no need -->
  <node pkg="tf" type="static_transform_publisher" name="base_2_nav_link" args="0 0 0 0 0 0 /base_frame /nav 100"/>


  <node pkg="rviz" type="rviz" name="rviz" 
  	args="-d $(find hector_slam_example)/launch/rviz_cfg.rviz"/>

  <include file="$(find hector_slam_example)/launch/default_mapping.launch"/>
  
  <!-- Modified by Durant35, for generating trajectory, follow 
  	https://github.com/tu-darmstadt-ros-pkg/hector_slam/blob/catkin/hector_slam_launch/launch/tutorial.launch
  	
  <include file="$(find hector_geotiff)/launch/geotiff_mapper.launch"/>
  -->
  <include file="$(find hector_geotiff)/launch/geotiff_mapper.launch">
    <arg name="trajectory_source_frame_name" value="scanmatcher_frame"/>
    <arg name="map_file_path" value="$(arg geotiff_map_file_path)"/>
  </include>

</launch>
